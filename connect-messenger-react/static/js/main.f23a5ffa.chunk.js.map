{"version":3,"sources":["helpers/DateFormatter.js","helpers/ChatAPI.js","contexts/AuthReducer.js","contexts/AuthContext.js","contexts/ChatReducer.js","contexts/ChatContext.js","components/Header.js","components/Search.js","components/ChatItem.js","components/LeftPanel.js","components/NewMessageInput.js","hooks/useLastMessage.js","hooks/useChat.js","components/SeenAvatar.js","components/SeenAvatarsPanel.js","helpers/FallingAvatar.js","components/SingleMessage.js","components/Messages.js","components/LoginPage.js","components/RightPanel.js","components/ProtectedRoute.js","App.js","index.js"],"names":["DateFormatter","prevDate","currentDate","nextDate","this","hr","getHours","min","getMinutes","mon","getMonth","day","getDate","h","m","getDay","getFullYear","getTime","d","Date","yr","s","getSeconds","sqlString","year","substring","month","hour","minute","baseURL","api","axios","create","ChatAPI","username","password","post","JSON","stringify","headers","Accept","res","status","token","authentication","localStorage","setItem","authDetails","jwt_decode","getItem","now","exp","removeItem","isSignedIn","Error","stompClient","disconnect","console","log","chats","callback","Stomp","over","SockJS","connect","Authentication","undefined","forEach","chat","subscribe","id","chatId","get","getAuthDetails","Authorization","data","messageId","userId","time","nowToSql","put","content","query","authReducer","state","action","type","newDetails","AuthContext","createContext","AuthContextProvider","children","useReducer","e","dispatch","Provider","value","chatReducer","target","reduce","total","c","i","newMessage","updatedMessages","messages","updatedChat","updatedChats","document","querySelector","scrollTop","scrollHeight","newChats","active","newActive","newStatus","updatedStatus","ChatContext","ChatContextProvider","Header","history","useHistory","useContext","dispatch_chats","className","aria-hidden","style","fontWeight","icon","faPowerOff","size","onClick","signOut","replace","Search","roundedCorner","useState","usersQueryResult","setUsersQueryResult","handleInput","a","searchUsersByQuery","then","results","borderBottomRightRadius","faSearch","onInput","map","u","name","surname","ChatItem","modifier","lastMessage","length","user","users","src","alt","LeftPanel","renderedChats","borderTopRightRadius","NewMessageInput","setContent","onSubmit","preventDefault","postMessage","useLastMessage","myLastMessage","setMyLastMessage","recipientLastMessage","setRecipientLastMessage","setLastMessage","useEffect","userIndex","recipientIndex","useChat","setChat","SeenAvatar","bottom","opacity","Number","isNaN","SeenAvatarsPanel","containerBottomMeasuredFromBottom","window","innerHeight","getBoundingClientRect","containerTopMeasuredFromBottom","top","calculatedBottom","Math","max","calculatedOpacity","fall","setBottom","start","stop","DT","x","t","DIST","T","sqrt","LOOP_COUNTER","Promise","resolve","setTimeout","SingleMessage","React","forwardRef","ref","message","dateFormatter","is5MinDiffBefore","displayDayIfDifferent","currentToHourMinute","currentToPretty","Messages","contentDisplayerRef","useRef","lastMessageRef","prevoiusBottom","current","setLastMessageRef","useCallback","node","updateStatus","renderedMessages","activeMessages","date","sqlToDateObject","prevM","len","nextM","df","is5MinDiffAfter","reference","setDim","handleResize","addEventListener","removeEventListener","onScroll","LoginPage","authFailed","setAuthFailed","setUsername","setPassword","handleSubmit","signIn","push","to","RightPanel","ProtectedRoute","restOfProps","App","websocketCallback","incoming","parsed","parse","body","loadAllChats","initWebsocket","path","vh","documentElement","setProperty","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f23a5ffa.chunk.js","sourcesContent":["class DateFormatter {\r\n\r\n    constructor(prevDate, currentDate, nextDate) {\r\n        this.prevDate = prevDate;\r\n        this.currentDate = currentDate;\r\n        this.nextDate = nextDate;\r\n    }\r\n\r\n    static #days = [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"];\r\n\r\n    static nowToSql() {\r\n        const d = new Date();\r\n        let yr = d.getFullYear(), mon = d.getMonth()+1, day = d.getDate(), h = d.getHours(), m = d.getMinutes(), s = d.getSeconds();\r\n        if (mon < 10) mon = \"0\" + mon;\r\n        if (day < 10) day = \"0\" + day;\r\n        if (h < 10) h = \"0\" + h;\r\n        if (m < 10) m = \"0\" + m;\r\n        if (s < 10) s = \"0\" + s;\r\n        return `${yr}-${mon}-${day}T${h}:${m}:${s}`;\r\n    }\r\n\r\n    static sqlToDateObject(sqlString) {\r\n        const year = sqlString.substring(0, 4);\r\n        const month = sqlString.substring(5, 7);\r\n        const day = sqlString.substring(8, 10);\r\n        const hour = sqlString.substring(11, 13);\r\n        const minute = sqlString.substring(14, 16);\r\n        return new Date(year, month-1, day, hour, minute);\r\n    }\r\n\r\n    currentToHourMinute() {\r\n        let hr = this.currentDate.getHours();\r\n        if (hr < 10) hr = \"0\" + hr;\r\n        let min = this.currentDate.getMinutes();\r\n        if (min < 10) min = \"0\" + min;\r\n        return `${hr}:${min}`;\r\n    }\r\n\r\n    currentToPretty() {\r\n        let mon = this.currentDate.getMonth()+1, day = this.currentDate.getDate(), h = this.currentDate.getHours(), m = this.currentDate.getMinutes();\r\n        if (mon < 10) mon = \"0\" + mon;\r\n        if (day < 10) day = \"0\" + day;\r\n        if (h < 10) h = \"0\" + h;\r\n        if (m < 10) m = \"0\" + m;\r\n        return `${DateFormatter.#days[this.currentDate.getDay()]}, ${this.currentDate.getFullYear()}.${mon}.${day}, ${h}:${m}`;\r\n    }\r\n\r\n    displayDayIfDifferent() {\r\n        return this.currentDate.getTime() - this.prevDate.getTime() > 24*60*60*1000 ? `${DateFormatter.#days[this.currentDate.getDay()]}, ` : \"\"\r\n    }\r\n\r\n    is5MinDiffBefore() {\r\n        return this.currentDate.getTime() - this.prevDate.getTime() < 5*60*1000;\r\n    }\r\n\r\n    is5MinDiffAfter() {\r\n        return this.nextDate.getTime() - this.currentDate.getTime() < 5*60*1000;\r\n    }\r\n\r\n}\r\n\r\nexport default DateFormatter;","import jwt_decode from \"jwt-decode\";\r\nimport SockJS from \"sockjs-client\";\r\nimport { Stomp } from \"@stomp/stompjs\";\r\nimport DateFormatter from \"./DateFormatter\";\r\nimport axios from \"axios\";\r\n\r\nconst baseURL = \"http://192.168.8.104:8080\";\r\nconst api = axios.create({ baseURL });\r\n\r\nclass ChatAPI {\r\n\r\n    static socket;\r\n    static stompClient;\r\n    static authDetails;\r\n\r\n    static async signIn(username, password) {\r\n        try {\r\n            const res = await api.post(\"/login\",\r\n                JSON.stringify({ username, password }),\r\n                {\r\n                    headers: {\r\n                        Accept: \"application/json, text/plain, */*\",\r\n                        \"Content-Type\": \"application/json\"\r\n                    }\r\n                }\r\n            );\r\n            if (res.status === 200) {\r\n                const token = res.headers.authentication;\r\n                localStorage.setItem(\"token\", token);\r\n                this.authDetails = jwt_decode(token);\r\n                return true;\r\n            }\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static isSignedIn() {\r\n        if (!localStorage.getItem(\"token\")) return false;\r\n\r\n        if (!this.authDetails) {\r\n            this.authDetails = jwt_decode(localStorage.getItem(\"token\"));\r\n\r\n            if (Date.now() >= this.authDetails.exp * 1000) {\r\n                localStorage.removeItem(\"token\");\r\n                this.authDetails = null;\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static getAuthDetails() {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        else {\r\n            if (!this.authDetails) {\r\n                this.authDetails = jwt_decode(localStorage.getItem(\"token\"));\r\n            }\r\n            return this.authDetails;\r\n        }\r\n    }\r\n\r\n    static signOut() {\r\n        if (this.stompClient) {\r\n            this.stompClient.disconnect(() => console.log(\"Disconnected from websocket, this equals: \", this));\r\n            this.stompClient = null;\r\n        }\r\n        \r\n        localStorage.removeItem(\"token\");\r\n        this.authDetails = null;\r\n    }\r\n\r\n    static initWebsocket(chats, callback) {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        if (this.stompClient) {\r\n            throw new Error(\"Websocket is already opened!\");\r\n        }\r\n        this.stompClient = Stomp.over(\r\n            () => new SockJS(`${baseURL}/websocket`)\r\n        );\r\n        this.stompClient.connect(\r\n            {\r\n                Authentication: localStorage.getItem(\"token\")\r\n            },\r\n            () => {\r\n                this.password = undefined;\r\n                chats.forEach(chat => {\r\n                    this.stompClient.subscribe(`/topic/messages/${chat.id}`, callback);\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    static subscribeToChat(chatId, callback) {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        if (!this.stompClient) {\r\n            throw new Error(\"Websocket connection doesn't exists. Call initWebsocket() method first.\");\r\n        }\r\n        this.stompClient.subscribe(`/topic/messages/${chatId}`, callback);\r\n    }\r\n\r\n    static async loadAllChats() {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        const res = await api.get(`/chats/${this.getAuthDetails().id}`, {\r\n            headers: {\r\n                Authorization: localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        return res.data;\r\n    }\r\n\r\n    /* puts new status to api, when I read unseen message */\r\n    /* performs request through axios,\r\n     * api sends status update through websocket,\r\n     * chatReducer performs context update\r\n     * useEffect is launched once again, but then specific messages (their IDs) are equal and nothing happens\r\n     * */\r\n    static updateStatus(chatId, messageId) {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        console.log( {\r\n            id: {\r\n                chatId,\r\n                userId: this.getAuthDetails().id\r\n            },\r\n            messageId,\r\n            time: DateFormatter.nowToSql()\r\n        });\r\n        api.put(\"/status\",\r\n            {\r\n                id: {\r\n                    chatId,\r\n                    userId: this.getAuthDetails().id\r\n                },\r\n                messageId,\r\n                time: DateFormatter.nowToSql()\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: localStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    static postMessage(chatId, content) {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        api.post(\"/message\",\r\n            {\r\n                chatId,\r\n                userId: this.getAuthDetails().id,\r\n                time: DateFormatter.nowToSql(),\r\n                content\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: localStorage.getItem(\"token\")\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    static async searchUsersByQuery(query) {\r\n        if (!this.isSignedIn()) {\r\n            throw new Error(\"User isn't signed in!\");\r\n        }\r\n        const res = await api.get(`/user/${query}`, {\r\n            headers: {\r\n                Authorization: localStorage.getItem(\"token\")\r\n            }\r\n        });\r\n        return res.data;\r\n    }\r\n}\r\n\r\nexport default ChatAPI;","export const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_DETAILS\":\r\n            return action.newDetails;\r\n        case \"RESET_DETAILS\":\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext, useReducer } from \"react\";\r\nimport { authReducer } from \"./AuthReducer\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = ({ children }) => {\r\n    const [ authDetails, dispatch ] = useReducer(authReducer, null, () => {\r\n        try {\r\n            return ChatAPI.getAuthDetails();\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <AuthContext.Provider value={{authDetails, dispatch}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;","export const chatReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_MESSAGE\": {\r\n            const target = state.chats.reduce((total, c, i) => {\r\n                if (c.id === action.newMessage.chatId)\r\n                    return i;\r\n                else return total;\r\n            }, -1);\r\n            if (target === -1) return state;\r\n            console.log(\"target = \" + target);\r\n            const updatedMessages = [ ...state.chats[target].messages, action.newMessage ];\r\n            const updatedChat = { ...state.chats[target], messages: updatedMessages };\r\n            const updatedChats = [ ...state.chats ];\r\n            updatedChats[target] = updatedChat;\r\n            document.querySelector(\".messages__container\").scrollTop = document.querySelector(\".messages__container\").scrollHeight;\r\n            return { ...state, chats: updatedChats };\r\n        }\r\n        case \"SET_CHATS\":\r\n            console.log(\"SET_CHATS inside ChatReducer\");\r\n            return { ...state, chats: action.newChats };\r\n        case \"SET_ACTIVE\":\r\n            return { ...state, active: action.newActive };\r\n        case \"UPDATE_STATUS\": {\r\n            const target = state.chats.reduce((total, c, i) => {\r\n                if (c.id === action.newStatus.id.chatId)\r\n                    return i;\r\n                else return total;\r\n            }, -1);\r\n            console.log(\"target = \" + target);\r\n            if (target === -1) return state;\r\n            const updatedStatus = [ ...state.chats[target].status ];\r\n            updatedStatus[updatedStatus[0].id.userId === action.newStatus.id.userId ? 0 : 1] = action.newStatus;\r\n            const updatedChat = { ...state.chats[target], status: updatedStatus };\r\n            const updatedChats = [ ...state.chats ];\r\n            updatedChats[target] = updatedChat;\r\n            return { ...state, chats: updatedChats };\r\n        }\r\n        case \"CLEAR\":\r\n            return { chats: [], active: 0 };\r\n        default:\r\n            console.log(`No matching case for: ${action.type} inside chatReducer`);\r\n            return state;\r\n    };\r\n}","import { createContext, useReducer } from \"react\";\r\nimport { chatReducer } from \"./ChatReducer\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst ChatContextProvider = ({ children }) => {\r\n    const [ state, dispatch ] = useReducer(chatReducer, { chats: [], active: 0 });\r\n\r\n    return (\r\n        <ChatContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </ChatContext.Provider>\r\n    );\r\n}\r\n\r\nexport default ChatContextProvider;","import React, { useContext } from \"react\";\r\nimport \"../styles/Header.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { ChatContext } from \"../contexts/ChatContext\";\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const { authDetails, dispatch } = useContext(AuthContext);\r\n    const { dispatch: dispatch_chats } = useContext(ChatContext);\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <span className=\"header__title\">\r\n                <span aria-hidden=\"true\" style={{fontWeight: \"800\"}}>&gt;&gt;&gt; </span>\r\n                CONNECT\r\n            </span>\r\n            {authDetails &&\r\n                <FontAwesomeIcon icon={faPowerOff} size=\"3x\" onClick={() => {\r\n                    ChatAPI.signOut();\r\n                    dispatch({ type: \"RESET_DETAILS\" });\r\n                    dispatch_chats({ type: \"CLEAR\" });\r\n                    history.replace(\"/login\");\r\n                }}/>\r\n            }\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport \"../styles/Search.scss\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Search = ({ roundedCorner }) => {\r\n    const [ usersQueryResult, setUsersQueryResult ] = useState([]);\r\n\r\n    const handleInput = async e => {\r\n        const query = e.target.value;\r\n        if (query !== \"\") {\r\n            ChatAPI.searchUsersByQuery(query).then(results => {\r\n                setUsersQueryResult(results);\r\n            });\r\n        } else setUsersQueryResult([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\" style={{borderBottomRightRadius: roundedCorner ? \"20px\" : 0}}>\r\n            <FontAwesomeIcon icon={faSearch} size=\"5x\" />\r\n            <div className=\"search__container\" >\r\n                Szukaj:\r\n                <input type=\"text\" className=\"search__queryInput\" onInput={handleInput}/>\r\n                <div className=\"search__queryResult\">\r\n                    <ul>{\r\n                        usersQueryResult.map(u => <li key={u.username}>{`${u.name} ${u.surname}`}</li>)\r\n                    }</ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport \"../styles/ChatItem.scss\";\r\n\r\nconst ChatItem = ({chat, modifier, onClick }) => {\r\n    const { authDetails } = useContext(AuthContext);\r\n    const lastMessage = chat.messages[chat?.messages.length - 1];\r\n    const user = chat.users[chat.users[0].id !== authDetails.id ? 0 : 1];\r\n\r\n    return (\r\n        <div className={`chatItem${modifier}`} onClick={onClick}>\r\n            <img\r\n                src={`./images/avatars/${user.username}.png`}\r\n                alt=\"User avatar\"\r\n            />\r\n            <div className=\"chatItem__chatData\">\r\n                <span className=\"chatItem__chatData__nameSurname\">\r\n                    {user.name + \" \" + user.surname}\r\n                </span>\r\n                <span className=\"chatItem__chatData__lastMessage\">{\r\n                       (lastMessage.userId === user.id ? user.name : \"Ty\") + \": \" +\r\n                        lastMessage.content.substring(0, 35) +\r\n                       (lastMessage.content.length > 35 ? \"...\" : \"\")\r\n                }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatItem;","import { useContext } from \"react\";\r\nimport { ChatContext } from \"../contexts/ChatContext\";\r\nimport Search from \"./Search\";\r\nimport ChatItem from \"./ChatItem\";\r\nimport \"../styles/LeftPanel.scss\";\r\n\r\nconst LeftPanel = () => {\r\n    const { state: { chats, active }, dispatch } = useContext(ChatContext);\r\n\r\n    const renderedChats = chats.map((c, i) => {\r\n        let modifier = \"\";\r\n        switch (i) {\r\n            case active - 1:    modifier = \" chatItem--beforeActive\"; break;\r\n            case active:        modifier = \" chatItem--active\"; break;\r\n            case active + 1:    modifier = \" chatItem--afterActive\"; break;\r\n            default:\r\n        }\r\n        return <ChatItem\r\n                    chat={c}\r\n                    modifier={modifier}\r\n                    onClick={() => dispatch({ type: \"SET_ACTIVE\", newActive: i })}\r\n                    key={i}\r\n                />;\r\n    });\r\n\r\n    return (\r\n        <div className=\"leftPanel\">\r\n            <div className=\"leftPanel__flipped\">\r\n                <Search roundedCorner={active === 0} />\r\n                {renderedChats}\r\n                <div\r\n                    className=\"leftPanel__foo\"\r\n                    style={active === chats?.length - 1 ? {borderTopRightRadius: '20px'} : {}}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftPanel;","import React, { useContext, useState } from \"react\";\r\nimport { ChatContext } from \"../contexts/ChatContext\";\r\nimport \"../styles/NewMessageInput.scss\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\n\r\nconst NewMessageInput = () => {\r\n    const [ content, setContent ] = useState(\"\");\r\n    const { state: { chats, active } } = useContext(ChatContext);\r\n\r\n    const handlePost = e => {\r\n        e.preventDefault();\r\n        if (content) { \r\n            ChatAPI.postMessage(chats[active].id, content);\r\n            setContent(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"newMessageInput\" onSubmit={handlePost}>\r\n            <input type=\"text\" value={content} className=\"newMessageInput__input\" onInput={e => setContent(e.target.value) }/>\r\n            <input type=\"image\" className=\"newMessageInput__btn\" src=\"images/send.png\" alt=\"Send\"/>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default NewMessageInput;","import { useState, useEffect } from \"react\";\r\n\r\n/* returns information about messages (their IDs), that were displayed most recent by chat participants */\r\nconst useLastMessage = (chat, authDetails) => {\r\n    \r\n    const [ myLastMessage, setMyLastMessage ]               = useState(null);\r\n    const [ recipientLastMessage, setRecipientLastMessage ] = useState(null);\r\n    const [ lastMessage, setLastMessage ]                   = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (chat && authDetails) {\r\n            let userIndex       = chat.status[0].id.userId === authDetails.id ? 0 : 1;\r\n            let recipientIndex  = chat.status[0].id.userId !== authDetails.id ? 0 : 1;\r\n\r\n            if (typeof userIndex === \"number\" && typeof recipientIndex === \"number\") {\r\n                setMyLastMessage(       chat?.status[userIndex].messageId);\r\n                setRecipientLastMessage(chat?.status[recipientIndex].messageId);\r\n                setLastMessage(         chat?.messages[chat?.messages.length - 1].id);\r\n            }\r\n        }\r\n    }, [ chat, authDetails ]);\r\n\r\n    return { myLastMessage, recipientLastMessage, lastMessage };\r\n}\r\n\r\nexport default useLastMessage;","import { useState, useEffect } from \"react\";\r\n\r\n/* about hooks: even if they are re-rendered, their useState stays remembered */\r\nconst useChat = (chats, active) => {\r\n    const [ chat, setChat ] = useState(chats[active]);\r\n\r\n    useEffect(() => {\r\n        if (chats && typeof active === \"number\" )\r\n            setChat(chats[active]);\r\n        // eslint-disable-next-line\r\n    }, [ chats, active ]);\r\n\r\n    return chat;\r\n}\r\n\r\nexport default useChat;","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { ChatContext } from \"../contexts/ChatContext\";\r\nimport \"../styles/SeenAvatar.scss\";\r\n\r\nconst SeenAvatar = ({ bottom, opacity }) => {\r\n    const { state: { chats, active } } = useContext(ChatContext);\r\n    const { authDetails: { id } } = useContext(AuthContext);\r\n    const username = chats[active]?.users[chats[active]?.users[0]?.id !== id ? 0 : 1].username;\r\n    \r\n    return (\r\n        <img\r\n            className=\"seenAvatar\"\r\n            src={`./images/avatars/${username}.png`}\r\n            alt=\"seen avatar\"\r\n            style={{\r\n                bottom: `${bottom}px`,\r\n                opacity: Number.isNaN(opacity) ? 0 : opacity  /* go from top to bottom, from full color to full transparent */\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SeenAvatar;","import React from \"react\";\r\nimport SeenAvatar from \"./SeenAvatar\";\r\n\r\nconst SeenAvatarsPanel = ({ bottom }) => {\r\n\r\n    /* DON'T TOUCH! */ \r\n    const containerBottomMeasuredFromBottom = window.innerHeight - document.querySelector(\".messages__container\")?.getBoundingClientRect().bottom;\r\n    const containerTopMeasuredFromBottom = window.innerHeight - document.querySelector(\".messages__container\")?.getBoundingClientRect().top;\r\n\r\n    const calculatedBottom = Math.min(\r\n        Math.max(\r\n            bottom,  /* max bottom position */\r\n            containerBottomMeasuredFromBottom - 20\r\n        ),  /* max top position */\r\n        containerTopMeasuredFromBottom + 20\r\n    );\r\n\r\n    const calculatedOpacity = Math.min(\r\n        Math.max(  /* bottom fading out */\r\n            (calculatedBottom - containerBottomMeasuredFromBottom + 10)/10,\r\n            0\r\n        ),\r\n        Math.max(  /* top fading out */\r\n            (containerTopMeasuredFromBottom - calculatedBottom - 10)/10,\r\n            0\r\n        ),\r\n        1\r\n    );\r\n\r\n    return (\r\n        <div className=\"seenAvatarsPanel\">\r\n            <SeenAvatar\r\n                bottom={calculatedBottom}\r\n                opacity={calculatedOpacity}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SeenAvatarsPanel;","const fall = async (setBottom, start, stop) => {\r\n    const DT = .01;\r\n    let x = start;\r\n    const a = 10000;\r\n    let t = 0;\r\n    /* s = at^2 / 2 */\r\n    const DIST = stop - start;\r\n    const T = Math.sqrt(2*DIST / a);\r\n    const LOOP_COUNTER = T / DT;\r\n\r\n    for (let i=0; i<LOOP_COUNTER; i++) {\r\n        x = start + a * t**2 / 2;\r\n        t += DT;\r\n        setBottom(x);\r\n        await new Promise(resolve => setTimeout(resolve, DT * 1000));  // delay\r\n    }\r\n    setBottom(stop);\r\n}\r\n\r\nexport default fall;","import React from \"react\";\r\n\r\nconst SingleMessage = React.forwardRef(( { message, modifier, dateFormatter }, ref ) => {\r\n    return (\r\n        <>\r\n            {!dateFormatter.is5MinDiffBefore() &&\r\n            <div className=\"messages__time\">\r\n                {dateFormatter.displayDayIfDifferent() + dateFormatter.currentToHourMinute()}\r\n            </div>}\r\n            <div ref={ref} id={`messageId${message.id}`} className={`messages__singleMessage${modifier}`}>\r\n                {message.content}\r\n                <div className=\"messages__singleMessage__tooltip\">{dateFormatter.currentToPretty()}</div>\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SingleMessage;","import React, { useCallback, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport { ChatContext } from \"../contexts/ChatContext\";\r\nimport DateFormatter from \"../helpers/DateFormatter\";\r\nimport \"../styles/Messages.scss\";\r\nimport NewMessageInput from \"./NewMessageInput\";\r\nimport useLastMessage from \"../hooks/useLastMessage\";\r\nimport useChat from \"../hooks/useChat\";\r\nimport SeenAvatarsPanel from \"./SeenAvatarsPanel\";\r\nimport fall from \"../helpers/FallingAvatar\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\nimport SingleMessage from \"./SingleMessage\";\r\n\r\nconst Messages = () => {\r\n    const { state: { chats, active } }  = useContext(ChatContext);\r\n    const { authDetails }               = useContext(AuthContext);\r\n    const chat                          = useChat(chats, active);\r\n    const { myLastMessage, recipientLastMessage, lastMessage } = useLastMessage(chat, authDetails);\r\n    const [ bottom, setBottom ]         = useState(null);\r\n    const contentDisplayerRef           = useRef(null);\r\n    const lastMessageRef                = useRef(null);\r\n    const prevoiusBottom                = useRef(null);\r\n\r\n    /* for keeping prevoius value inside ref */\r\n    useEffect(() => {\r\n        prevoiusBottom.current = bottom;\r\n    }, [ bottom ]);\r\n\r\n    /* callback ref */\r\n    const setLastMessageRef = useCallback(node => {\r\n        if (node) {\r\n            lastMessageRef.current = node;\r\n            if (prevoiusBottom.current) {\r\n                fall(setBottom, prevoiusBottom.current, node.getBoundingClientRect().bottom);\r\n            }\r\n            else setBottom(node.getBoundingClientRect().bottom);\r\n        }\r\n    // eslint-disable-next-line\r\n    }, []);\r\n\r\n    /* updates bottom value when switching between chats */\r\n    useEffect(() => {\r\n        if (contentDisplayerRef.current) {\r\n            contentDisplayerRef.current.scrollTop = contentDisplayerRef.current.scrollHeight;\r\n        }\r\n        if (lastMessageRef.current) {\r\n            setBottom(lastMessageRef.current.getBoundingClientRect().bottom);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [ chat ]);\r\n\r\n    useEffect(() => {\r\n        if (myLastMessage && lastMessage && myLastMessage !== lastMessage) { // there are some messages unseen: myLastMessage === lastMessageSeenByMe\r\n            ChatAPI.updateStatus(chat.id, lastMessage);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [ myLastMessage, lastMessage ]);\r\n\r\n    const renderedMessages = chat?.messages.map((m, i) => {\r\n        const activeMessages = chat.messages;\r\n        const date = DateFormatter.sqlToDateObject(m.time);\r\n\r\n        let prevDate;\r\n        if (i === 0) prevDate = new Date(1970);\r\n        else {\r\n            const prevM = activeMessages[i-1];\r\n            prevDate = DateFormatter.sqlToDateObject(prevM.time);\r\n        }\r\n\r\n        const len = activeMessages.length;\r\n        let nextDate;\r\n        if (i === len - 1) nextDate = new Date(2038, 1, 19);\r\n        else {\r\n            const nextM = activeMessages[i+1];\r\n            nextDate = DateFormatter.sqlToDateObject(nextM.time);\r\n        }\r\n\r\n        const df = new DateFormatter(prevDate, date, nextDate);\r\n\r\n        let modifier = \"\";\r\n        /* check who wrote this message */\r\n        if (m.userId === authDetails.id) modifier += \" messages__singleMessage--myMsg\";\r\n        else modifier += \" messages__singleMessage--receivedMsg\";\r\n        if (i === 0) {\r\n            if (activeMessages[1].userId === activeMessages[0].userId && df.is5MinDiffAfter()) // if 1st and 2nd messages have the same sender\r\n                modifier += \" messages__singleMessage--bottomSticky\";\r\n        } else if (i === len - 1) {\r\n            if (activeMessages[len-2].userId === activeMessages[len-1].userId && df.is5MinDiffBefore())  // if two last messages have the same sender\r\n                modifier += \" messages__singleMessage--topSticky\";\r\n        } else { /* code below runs if i !== 0 and i !== length-1 */\r\n            if (activeMessages[i-1]?.userId === m.userId && df.is5MinDiffBefore()) modifier += \" messages__singleMessage--topSticky\";\r\n            if (activeMessages[i+1]?.userId === m.userId && df.is5MinDiffAfter()) modifier += \" messages__singleMessage--bottomSticky\";\r\n        }\r\n\r\n        const reference = recipientLastMessage === m.id ? setLastMessageRef : null;  // inserts lastMessageRef to last message displayed by second user\r\n\r\n        return (\r\n            <SingleMessage key={i} ref={reference} message={m} modifier={modifier} dateFormatter={df} />\r\n        );\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    const [ dim, setDim ] = useState(0); /* it exists here only because of a need of re-rendering by change either props of state */\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setDim(window.innerHeight);\r\n            if (lastMessageRef.current) {\r\n                setBottom(lastMessageRef.current.getBoundingClientRect().bottom);\r\n            }\r\n        };\r\n        window.addEventListener(\"resize\", handleResize);\r\n        return () => { window.removeEventListener(\"resize\", handleResize) };\r\n    })\r\n\r\n    return (\r\n        <div className=\"messages\">\r\n            <div\r\n                ref={contentDisplayerRef}\r\n                className=\"messages__container\"\r\n                onScroll={() => {\r\n                    if (lastMessageRef.current) {\r\n                        setBottom(lastMessageRef.current.getBoundingClientRect().bottom);\r\n                    }\r\n                }}\r\n            >\r\n                <div className=\"messages__container__displayContent\">\r\n                   {renderedMessages}\r\n                </div>\r\n                <SeenAvatarsPanel bottom={window.innerHeight-bottom} />\r\n            </div>\r\n            <NewMessageInput />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React, { useContext, useState } from \"react\";\r\nimport \"../styles/LoginPage.scss\";\r\nimport { useHistory, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\n\r\nconst LoginPage = () => {\r\n    const { dispatch } = useContext(AuthContext);\r\n    const [ authFailed, setAuthFailed ] = useState(false);\r\n    const [ username, setUsername ] = useState(\"\");\r\n    const [ password, setPassword ] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const succeded = await ChatAPI.signIn(username, password);\r\n        if (succeded) {\r\n            dispatch({ type: \"SET_DETAILS\", newDetails: ChatAPI.getAuthDetails() });\r\n            history.push(\"/\");\r\n        } else {\r\n            console.log(\"Auth failed\");\r\n            setAuthFailed(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        (ChatAPI.isSignedIn() ? \r\n            <Redirect to=\"/\" /> : \r\n            <>\r\n                <div className=\"loginPage\">\r\n                    <span className=\"loginPage__title\">\r\n                        <span aria-hidden=\"true\" style={{fontWeight: 700}}>&gt;&gt;&gt; </span> restore your CONNECTion\r\n                    </span>\r\n                    <form className=\"loginPage__form\" onSubmit={handleSubmit} >\r\n                        <label className=\"loginPage__label\">your username:</label>\r\n                        <input type=\"text\" className=\"loginPage__input\" onInput={e => setUsername(e.target.value)}/>\r\n                        <label className=\"loginPage__label\">password:</label>\r\n                        <input type=\"password\" className=\"loginPage__input\" onInput={e => setPassword(e.target.value)}/>\r\n                        <input type=\"submit\" className=\"loginPage__input\" value=\"sign in\" />\r\n                    </form>\r\n                    {authFailed && <span className=\"loginPage__authFailed\">Bad credentials! Try again</span>}\r\n                </div>\r\n                <footer><b><span aria-hidden=\"true\">&gt;&gt;&gt;</span> <i>CONNECT</i></b> - free text messenger | &copy; CONNECT Inc. 2021</footer>\r\n            </>\r\n        )\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport \"../styles/RightPanel.scss\";\r\n\r\nconst RightPanel = () => {\r\n    const { authDetails } = useContext(AuthContext);\r\n    return (\r\n        <div className=\"rightPanel\">\r\n            <img\r\n                src={`./images/avatars/${authDetails.username}.png`}\r\n                alt=\"User avatar\"\r\n                className=\"rightPanel__userAvatar\"\r\n            />\r\n            <span className=\"rightPanel__nameSurname\">{authDetails.name + \" \" + authDetails.surname}</span>\r\n            <span className=\"rightPanel__username\">{authDetails.username}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightPanel;","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport ChatAPI from \"../helpers/ChatAPI\";\r\n\r\nconst ProtectedRoute = ({ children, ...restOfProps }) => {\r\n    return (\r\n        <Route {...restOfProps}>\r\n            {\r\n                ChatAPI.isSignedIn() ?\r\n                children : \r\n                <Redirect to=\"/login\" />\r\n            }\r\n        </Route>\r\n    );\r\n};\r\n\r\nexport default ProtectedRoute;","import React, { useContext, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport LeftPanel from \"./components/LeftPanel\";\r\nimport Messages from \"./components/Messages\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport { AuthContext } from \"./contexts/AuthContext\";\r\nimport { ChatContext } from \"./contexts/ChatContext\";\r\nimport RightPanel from \"./components/RightPanel\";\r\nimport ChatAPI from \"./helpers/ChatAPI\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\n\r\nconst App = () => {\r\n    const { dispatch } = useContext(ChatContext);\r\n    const { authDetails } = useContext(AuthContext);\r\n\r\n    const websocketCallback = incoming => {\r\n        const parsed = JSON.parse(incoming.body);\r\n        if (parsed.content) { // got new message\r\n            dispatch({ type: \"ADD_MESSAGE\", newMessage: parsed });\r\n        } else {\r\n            dispatch({ type: \"UPDATE_STATUS\", newStatus: parsed });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(\"authDetails useEffect called\");\r\n        console.log(\"authDetails = \");\r\n        console.log(authDetails);\r\n\r\n        if (authDetails) {\r\n            ChatAPI.loadAllChats().then(chats => {\r\n                dispatch({ type: \"SET_CHATS\", newChats: chats });\r\n                ChatAPI.initWebsocket(chats, websocketCallback);\r\n            });\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [ authDetails ]);\r\n\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/login\" >\r\n                    <LoginPage />\r\n                </Route>\r\n                <ProtectedRoute path=\"/\">\r\n                    <div className=\"app__container\">\r\n                        <LeftPanel />\r\n                        <Messages />\r\n                        <RightPanel />\r\n                    </div>\r\n                </ProtectedRoute>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/base.scss\";\r\nimport App from \"./App\";\r\nimport AuthContextProvider from \"./contexts/AuthContext\";\r\nimport ChatContextProvider from \"./contexts/ChatContext\";\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n    let vh = window.innerHeight * .01;\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n});\r\n\r\nReactDOM.render(\r\n    <AuthContextProvider>\r\n        <ChatContextProvider>\r\n            <App />\r\n        </ChatContextProvider>\r\n    </AuthContextProvider>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}